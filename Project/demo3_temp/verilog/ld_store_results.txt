Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:10 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:10 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=79" -c proc_hier_pbench -lib __work 
# Start time: 13:39:11 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:11 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:7.4 CYCLES:37 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:12 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:12 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=80" -c proc_hier_pbench -lib __work 
# Start time: 13:39:12 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:13 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:13 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:13 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=81" -c proc_hier_pbench -lib __work 
# Start time: 13:39:14 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:14 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:4.0 CYCLES:24 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:15 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:15 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=82" -c proc_hier_pbench -lib __work 
# Start time: 13:39:16 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:16 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:6.2 CYCLES:25 ICOUNT:4 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:18 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:18 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=83" -c proc_hier_pbench -lib __work 
# Start time: 13:39:19 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:19 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:5.0 CYCLES:25 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:20 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:20 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=102" -c proc_hier_pbench -lib __work 
# Start time: 13:39:21 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:21 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:21 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:22 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=150" -c proc_hier_pbench -lib __work 
# Start time: 13:39:22 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:22 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:23 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:24 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=149" -c proc_hier_pbench -lib __work 
# Start time: 13:39:25 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:25 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:27 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:27 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=136" -c proc_hier_pbench -lib __work 
# Start time: 13:39:28 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:28 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:4.6 CYCLES:23 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:28 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:30 on Apr 15,2019, Elapsed time: 0:00:02
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=2001" -c proc_hier_pbench -lib __work 
# Start time: 13:39:31 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:32 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:5.2 CYCLES:26 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:35 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:35 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=78" -c proc_hier_pbench -lib __work 
# Start time: 13:39:36 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:36 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:4.5 CYCLES:27 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:37 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:38 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=1" -c proc_hier_pbench -lib __work 
# Start time: 13:39:38 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:39 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:8.0 CYCLES:48 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:40 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:40 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=5" -c proc_hier_pbench -lib __work 
# Start time: 13:39:41 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:41 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:9.2 CYCLES:46 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:42 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:42 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=16" -c proc_hier_pbench -lib __work 
# Start time: 13:39:42 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:43 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:43 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:44 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=111" -c proc_hier_pbench -lib __work 
# Start time: 13:39:44 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:45 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:4.3 CYCLES:26 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
BASE:ld_1.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:45 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:45 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=340" -c proc_hier_pbench -lib __work 
# Start time: 13:39:46 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:46 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_1.asm SUCCESS CPI:5.2 CYCLES:26 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:47 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:47 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=79" -c proc_hier_pbench -lib __work 
# Start time: 13:39:48 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:48 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:7.4 CYCLES:37 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:48 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:49 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=80" -c proc_hier_pbench -lib __work 
# Start time: 13:39:49 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:50 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:50 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:50 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=81" -c proc_hier_pbench -lib __work 
# Start time: 13:39:51 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:51 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:4.0 CYCLES:24 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:52 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:52 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=82" -c proc_hier_pbench -lib __work 
# Start time: 13:39:53 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:53 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:6.2 CYCLES:25 ICOUNT:4 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:53 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:54 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=83" -c proc_hier_pbench -lib __work 
# Start time: 13:39:54 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:55 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:5.0 CYCLES:25 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:55 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:55 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=102" -c proc_hier_pbench -lib __work 
# Start time: 13:39:56 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:56 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:57 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:57 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=150" -c proc_hier_pbench -lib __work 
# Start time: 13:39:58 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:39:58 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:39:58 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:39:59 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=149" -c proc_hier_pbench -lib __work 
# Start time: 13:39:59 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:00 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:00 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:02 on Apr 15,2019, Elapsed time: 0:00:02
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=136" -c proc_hier_pbench -lib __work 
# Start time: 13:40:02 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:03 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:4.6 CYCLES:23 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:03 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:03 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=2001" -c proc_hier_pbench -lib __work 
# Start time: 13:40:04 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:04 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:5.2 CYCLES:26 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:05 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:06 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=78" -c proc_hier_pbench -lib __work 
# Start time: 13:40:06 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:07 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:4.5 CYCLES:27 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:07 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:07 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=1" -c proc_hier_pbench -lib __work 
# Start time: 13:40:08 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:08 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:8.0 CYCLES:48 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:10 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:10 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=5" -c proc_hier_pbench -lib __work 
# Start time: 13:40:11 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:11 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:9.2 CYCLES:46 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:12 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:13 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=16" -c proc_hier_pbench -lib __work 
# Start time: 13:40:14 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:14 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:14 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:15 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=111" -c proc_hier_pbench -lib __work 
# Start time: 13:40:16 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:16 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:4.3 CYCLES:26 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
BASE:ld_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:16 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:17 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=340" -c proc_hier_pbench -lib __work 
# Start time: 13:40:17 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:18 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_0.asm SUCCESS CPI:5.2 CYCLES:26 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:18 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:18 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=79" -c proc_hier_pbench -lib __work 
# Start time: 13:40:19 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:19 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:7.4 CYCLES:37 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:21 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:21 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=80" -c proc_hier_pbench -lib __work 
# Start time: 13:40:22 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:22 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:22 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:23 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=81" -c proc_hier_pbench -lib __work 
# Start time: 13:40:23 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:24 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:4.0 CYCLES:24 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:24 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:24 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=82" -c proc_hier_pbench -lib __work 
# Start time: 13:40:25 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:25 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:6.2 CYCLES:25 ICOUNT:4 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:26 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:26 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=83" -c proc_hier_pbench -lib __work 
# Start time: 13:40:27 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:27 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:5.0 CYCLES:25 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:27 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:28 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=102" -c proc_hier_pbench -lib __work 
# Start time: 13:40:28 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:29 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:29 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:29 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=150" -c proc_hier_pbench -lib __work 
# Start time: 13:40:30 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:30 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:31 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:31 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=149" -c proc_hier_pbench -lib __work 
# Start time: 13:40:32 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:32 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:32 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:33 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=136" -c proc_hier_pbench -lib __work 
# Start time: 13:40:33 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:34 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:4.6 CYCLES:23 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:34 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:34 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=2001" -c proc_hier_pbench -lib __work 
# Start time: 13:40:35 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:35 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:5.2 CYCLES:26 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:36 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:36 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=78" -c proc_hier_pbench -lib __work 
# Start time: 13:40:37 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:37 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:4.5 CYCLES:27 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:38 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:38 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=1" -c proc_hier_pbench -lib __work 
# Start time: 13:40:39 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:39 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:8.0 CYCLES:48 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:39 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:40 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=5" -c proc_hier_pbench -lib __work 
# Start time: 13:40:40 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:41 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:9.2 CYCLES:46 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:42 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:42 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=16" -c proc_hier_pbench -lib __work 
# Start time: 13:40:43 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:43 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:43 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:44 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=111" -c proc_hier_pbench -lib __work 
# Start time: 13:40:44 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:45 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:4.3 CYCLES:26 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
BASE:ld_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:45 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:45 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=340" -c proc_hier_pbench -lib __work 
# Start time: 13:40:46 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:46 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/ld_2.asm SUCCESS CPI:5.2 CYCLES:26 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:47 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:47 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=79" -c proc_hier_pbench -lib __work 
# Start time: 13:40:48 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:48 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:6.2 CYCLES:37 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:49 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:49 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=80" -c proc_hier_pbench -lib __work 
# Start time: 13:40:50 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:50 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:50 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:50 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=81" -c proc_hier_pbench -lib __work 
# Start time: 13:40:51 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:51 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:4.7 CYCLES:28 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:52 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:52 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=82" -c proc_hier_pbench -lib __work 
# Start time: 13:40:53 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:53 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:4.7 CYCLES:28 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:54 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:55 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=83" -c proc_hier_pbench -lib __work 
# Start time: 13:40:56 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:56 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:5.4 CYCLES:27 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:56 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:57 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=102" -c proc_hier_pbench -lib __work 
# Start time: 13:40:57 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:58 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:9.0 CYCLES:54 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:40:58 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:40:58 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=150" -c proc_hier_pbench -lib __work 
# Start time: 13:40:59 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:40:59 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:00 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:01 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=149" -c proc_hier_pbench -lib __work 
# Start time: 13:41:01 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:02 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:02 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:02 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=136" -c proc_hier_pbench -lib __work 
# Start time: 13:41:03 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:03 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:3.8 CYCLES:23 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:04 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:04 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=2001" -c proc_hier_pbench -lib __work 
# Start time: 13:41:05 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:05 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:5.2 CYCLES:26 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:05 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:05 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=78" -c proc_hier_pbench -lib __work 
# Start time: 13:41:06 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:06 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:6.2 CYCLES:37 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:07 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:07 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=1" -c proc_hier_pbench -lib __work 
# Start time: 13:41:08 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:08 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:10.6 CYCLES:53 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:09 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:09 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=5" -c proc_hier_pbench -lib __work 
# Start time: 13:41:10 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:10 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:7.8 CYCLES:47 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:10 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:11 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=16" -c proc_hier_pbench -lib __work 
# Start time: 13:41:11 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:12 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:6.3 CYCLES:38 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:12 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:12 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=111" -c proc_hier_pbench -lib __work 
# Start time: 13:41:13 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:13 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:4.5 CYCLES:27 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
BASE:st_0.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:14 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:14 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=340" -c proc_hier_pbench -lib __work 
# Start time: 13:41:15 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:15 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_0.asm SUCCESS CPI:4.0 CYCLES:24 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:15 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:16 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=79" -c proc_hier_pbench -lib __work 
# Start time: 13:41:16 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Using seed          79
# rand_pat=80534400 10000000010100110100010000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:17 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:6.2 CYCLES:37 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:17 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:17 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=80" -c proc_hier_pbench -lib __work 
# Start time: 13:41:18 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Using seed          80
# rand_pat=80545200 10000000010101000101001000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:18 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:7.2 CYCLES:36 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:19 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:19 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=81" -c proc_hier_pbench -lib __work 
# Start time: 13:41:20 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Using seed          81
# rand_pat=80555e00 10000000010101010101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:20 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:4.7 CYCLES:28 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:21 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:22 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=82" -c proc_hier_pbench -lib __work 
# Start time: 13:41:22 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Using seed          82
# rand_pat=80566c00 10000000010101100110110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:23 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:4.7 CYCLES:28 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:24 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:24 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=83" -c proc_hier_pbench -lib __work 
# Start time: 13:41:25 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Using seed          83
# rand_pat=80577a00 10000000010101110111101000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:25 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:5.4 CYCLES:27 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:25 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:26 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=102" -c proc_hier_pbench -lib __work 
# Start time: 13:41:26 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Using seed         102
# rand_pat=806b8000 10000000011010111000000000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:27 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:9.0 CYCLES:54 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:27 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:27 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=150" -c proc_hier_pbench -lib __work 
# Start time: 13:41:28 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Using seed         150
# rand_pat=809e1801 10000000100111100001100000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:28 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:29 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:29 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=149" -c proc_hier_pbench -lib __work 
# Start time: 13:41:30 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Using seed         149
# rand_pat=809d0a01 10000000100111010000101000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:30 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:5.6 CYCLES:28 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:30 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:31 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=136" -c proc_hier_pbench -lib __work 
# Start time: 13:41:31 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Using seed         136
# rand_pat=808f5601 10000000100011110101011000000001
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:32 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:3.8 CYCLES:23 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:32 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:32 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=2001" -c proc_hier_pbench -lib __work 
# Start time: 13:41:33 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Using seed        2001
# rand_pat=883ce010 10001000001111001110000000010000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:33 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:5.2 CYCLES:26 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:34 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:34 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=78" -c proc_hier_pbench -lib __work 
# Start time: 13:41:35 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Using seed          78
# rand_pat=80523600 10000000010100100011011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:35 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:6.2 CYCLES:37 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:36 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:37 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=1" -c proc_hier_pbench -lib __work 
# Start time: 13:41:38 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Using seed           1
# rand_pat=80010e00 10000000000000010000111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:38 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:10.6 CYCLES:53 ICOUNT:5 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:38 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:38 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=5" -c proc_hier_pbench -lib __work 
# Start time: 13:41:39 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Using seed           5
# rand_pat=80054600 10000000000001010100011000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:40 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:7.8 CYCLES:47 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:41 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:41 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=16" -c proc_hier_pbench -lib __work 
# Start time: 13:41:42 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Using seed          16
# rand_pat=8010de00 10000000000100001101111000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:42 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:6.3 CYCLES:38 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:43 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:44 on Apr 15,2019, Elapsed time: 0:00:01
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=111" -c proc_hier_pbench -lib __work 
# Start time: 13:41:44 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Using seed         111
# rand_pat=8074fc00 10000000011101001111110000000000
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:45 on Apr 15,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:4.5 CYCLES:27 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
Program 0 /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
-------------------------------------------------
Step: 1
Compiling /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
BASE:st_2.asm PATH:/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests
Full name to pass to Assemble.java: /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v
Model Technology ModelSim DE vlog 10.7c Compiler 2018.08 Aug 17 2018
Start time: 13:41:46 on Apr 15,2019
vlog "+define+RANDSEED=3" -work __work EX_MEM_Latch.v Hazard_Detector.v ID_EX_Latch.v IF_ID_Latch.v MEM_WB_Latch.v alu.v barrelShifter.v bitRotate.v branchControlLogic.v clkrst.v control.v decodeInstruction.v dff.v executeInstruction.v fetchInstruction.v final_memory.v four_bank_mem.v fullAdder_1b.v jumpControlLogic.v leftRotate.v leftShift.v memory2c.v memoryReadWrite.v mux2_1.v mux4_1.v nand2.v nand3.v proc.v proc_hier.v proc_hier_bench.v proc_hier_pbench.v rca_16b.v rca_4b.v register_16bits.v rf.v rf_bench.v rf_bypass.v rightRotate.v rightShift.v signExt16_11.v signExt16_5.v signExt16_8.v stallmem.v writebackOutput.v xor3.v zeroExt16_5.v zeroExt16_8.v 
-- Compiling module EX_MEM_Latch
-- Compiling module Hazard_Detector
-- Compiling module ID_EX_Latch
-- Compiling module IF_ID_Latch
-- Compiling module MEM_WB_Latch
-- Compiling module alu
-- Compiling module barrelShifter
-- Compiling module bitRotate
-- Compiling module branchControlLogic
-- Compiling module clkrst
-- Compiling module control
-- Compiling module decodeInstruction
-- Compiling module dff
-- Compiling module executeInstruction
-- Compiling module fetchInstruction
-- Compiling module final_memory
-- Compiling module four_bank_mem
-- Compiling module fullAdder_1b
-- Compiling module jumpControlLogic
-- Compiling module leftRotate
-- Compiling module leftShift
-- Compiling module memory2c
-- Compiling module memoryReadWrite
-- Compiling module mux2_1
-- Compiling module mux4_1
-- Compiling module nand2
-- Compiling module nand3
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module rca_16b
-- Compiling module rca_4b
-- Compiling module register_16bits
-- Compiling module rf
-- Compiling module rf_bench
-- Compiling module rf_bypass
-- Compiling module rightRotate
-- Compiling module rightShift
-- Compiling module signExt16_11
-- Compiling module signExt16_5
-- Compiling module signExt16_8
-- Compiling module stallmem
-- Compiling module writebackOutput
-- Compiling module xor3
-- Compiling module zeroExt16_5
-- Compiling module zeroExt16_8

Top level modules:
	barrelShifter
	four_bank_mem
	memory2c
	proc_hier_bench
	proc_hier_pbench
	rf_bench
End time: 13:41:46 on Apr 15,2019, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.7c

# vsim "+seed=340" -c proc_hier_pbench -lib __work 
# Start time: 13:41:47 on Apr 15,2019
# //  ModelSim DE 10.7c Aug 17 2018Linux 4.15.0-47-generic
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetchInstruction
# Loading __work.register_16bits
# Loading __work.stallmem
# Loading __work.rca_16b
# Loading __work.rca_4b
# Loading __work.fullAdder_1b
# Loading __work.xor3
# Loading __work.nand2
# Loading __work.nand3
# Loading __work.IF_ID_Latch
# Loading __work.dff
# Loading __work.decodeInstruction
# Loading __work.control
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.signExt16_5
# Loading __work.signExt16_8
# Loading __work.signExt16_11
# Loading __work.zeroExt16_8
# Loading __work.zeroExt16_5
# Loading __work.Hazard_Detector
# Loading __work.ID_EX_Latch
# Loading __work.executeInstruction
# Loading __work.mux4_1
# Loading __work.mux2_1
# Loading __work.branchControlLogic
# Loading __work.jumpControlLogic
# Loading __work.alu
# Loading __work.leftRotate
# Loading __work.rightRotate
# Loading __work.leftShift
# Loading __work.rightShift
# Loading __work.bitRotate
# Loading __work.EX_MEM_Latch
# Loading __work.memoryReadWrite
# Loading __work.MEM_WB_Latch
# Loading __work.writebackOutput
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/instructionFetch/instructionMemory File: stallmem.v Line: 86
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$value$plusargs'.
#    Time: 0 ns  Iteration: 0  Instance: /proc_hier_pbench/DUT/p0/dataMemory/dataMemoryModule File: stallmem.v Line: 86
VSIM 1> run -all
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Using seed         340
# rand_pat=81665602 10000001011001100101011000000010
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:41:47 on Apr 15,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/s/i/sinclair/public/html/courses/cs552/spring2019/handouts/testprograms/public/inst_tests/st_2.asm SUCCESS CPI:4.0 CYCLES:24 ICOUNT:6 IHITRATE: 0 DHITRATE: 0
